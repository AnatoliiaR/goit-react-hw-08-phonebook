{"version":3,"file":"static/js/148.0ee4c477.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/ContactPage/ContactPage.module.css?b217","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","pages/ContactPage/ContactPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactPage_title__0m0bS\",\"subtitle\":\"ContactPage_subtitle__6qbgZ\",\"section\":\"ContactPage_section__eruzt\"};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Form_section__8XJMa\",\"field\":\"Form_field__+WuA3\",\"fieldInput\":\"Form_fieldInput__WSHnm\",\"fieldLabel\":\"Form_fieldLabel__DXjup\",\"button\":\"Form_button__8NOIT\"};","import React from 'react';\nimport { useState } from 'react';\nimport style from './Form.module.css';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameID = nanoid();\n  const numberID = nanoid();\n\n  const handleChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(fetchAddContact({ name, number }));\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={style.section}>\n      <form onSubmit={handleSubmit}>\n        <div className={style.field}>\n          <label className={style.fieldLabel}>\n            Name\n            <input\n              className={style.fieldInput}\n              type=\"text\"\n              name=\"name\"\n              id={nameID}\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleChangeName}\n            />\n          </label>\n        </div>\n        <div className={style.field}>\n          <label className={style.fieldLabel}>\n            Number\n            <input\n              className={style.fieldInput}\n              id={numberID}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleChangeNumber}\n            />\n          </label>\n        </div>\n        <button className={style.button} type=\"submit\" onClick={handleSubmit}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__j+P5X\",\"list\":\"Contact_list__4ja4z\",\"name\":\"Contact_name__xbxVU\",\"number\":\"Contact_number__aT6T9\",\"button\":\"Contact_button__F+kJb\"};","import PropTypes from 'prop-types';\nimport style from './Contact.module.css';\n\nconst Contact = ({ name, number, onDelete, id }) => {\n  return (\n    <div className={style.list}>\n      <div>\n        <span className={style.name}>{name}:</span>\n        <span className={style.number}>{number}</span>\n      </div>\n      <button\n        className={style.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.prototype = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  id: PropTypes.string,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './ContactList.module.css';\nimport Contact from 'components/Contact/Contact';\n\nexport const ContactList = ({ contacts = [], onDelete }) => {\n  const items = contacts.map(({ name, number, id }) => (\n    <li className={style.item} key={id}>\n      <Contact\n        name={name}\n        number={number}\n        onDelete={() => onDelete(id)}\n        id={id}\n      />\n    </li>\n  ));\n  return <ol>{items}</ol>;\n};\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\",\"text\":\"Filter_text__uqQRu\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={style.label}>\n      <p className={style.text}>Find contacts by name</p>\n      <input\n        className={style.input}\n        type=\"text\"\n        placeholder=\"Find contacts\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.includes(normalizedFilter)\n  );\n\n  return result;\n};\n","export const getFilter = store => store.filter;\n","import style from './ContactPage.module.css';\nimport { useEffect } from 'react';\nimport Form from '../../components/Form/Form';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from '../../redux/contacts/contacts-operations';\n\nexport default function App() {\n  const contacts = useSelector(getAllContacts);\n  const visibleContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = ({ name, number }) => {\n    dispatch(fetchAddContact({ name, number }));\n  };\n\n  const onDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const onChangeFilter = ({ currentTarget }) => {\n    dispatch(setFilter(currentTarget.value));\n  };\n\n  return (\n    <div className={style.App}>\n      <div className={style.section}>\n        <h2 className={style.subtitle}>Phonebook</h2>\n        <Form onSubmit={onAddContact} contacts={contacts} />\n\n        <h2 className={style.subtitle}>Contacts</h2>\n        <Filter value={filter} onChange={onChangeFilter} />\n        <ContactList contacts={visibleContacts} onDelete={onDeleteContact} />\n      </div>\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","nameID","nanoid","numberID","handleSubmit","e","preventDefault","fetchAddContact","reset","className","style","onSubmit","type","id","placeholder","pattern","title","required","value","onChange","currentTarget","onClick","Contact","onDelete","prototype","PropTypes","ContactList","contacts","items","map","isRequired","Filter","getAllContacts","getFilteredContacts","filter","normalizedFilter","toLowerCase","includes","getFilter","store","App","useSelector","visibleContacts","useEffect","fetchAllContacts","setFilter","fetchDeleteContact","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}